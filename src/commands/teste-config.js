// src/commands/teste-config.js - Comando para testar configura√ß√£o
import { formatReply } from '../utils/formatReply.js';

export default {
  commandName: 'teste-config',
  description: 'Testa a configura√ß√£o do bot (sem Discord)',
  category: 'sistema',
  aliases: ['test-config', 'config-test'],
  
  async execute(message, client) {
    console.log(`[TESTE-CONFIG] üîß Testando configura√ß√£o para ${message.author.username}`);
    
    try {
      // Verifica vari√°veis de ambiente
      const config = {
        discordToken: process.env.DISCORD_TOKEN ? '‚úÖ Configurado' : '‚ùå N√£o configurado',
        openrouterKey: process.env.OPENROUTER_API_KEY ? '‚úÖ Configurado' : '‚ùå N√£o configurado',
        discordClientId: process.env.DISCORD_CLIENT_ID ? '‚úÖ Configurado' : '‚ö†Ô∏è Opcional',
        discordAppId: process.env.DISCORD_APPLICATION_ID ? '‚úÖ Configurado' : '‚ö†Ô∏è Opcional',
        discordPublicKey: process.env.DISCORD_PUBLIC_KEY ? '‚úÖ Configurado' : '‚ö†Ô∏è Opcional'
      };
      
      // Verifica formato do token Discord
      let tokenFormat = '‚ùå Inv√°lido';
      if (process.env.DISCORD_TOKEN) {
        const token = process.env.DISCORD_TOKEN;
        if (token.startsWith('MT') || token.startsWith('MTA')) {
          tokenFormat = '‚úÖ Formato correto';
        } else {
          tokenFormat = '‚ùå Formato incorreto (deve come√ßar com MT ou MTA)';
        }
      }
      
      // Verifica formato da chave OpenRouter
      let keyFormat = '‚ùå Inv√°lida';
      if (process.env.OPENROUTER_API_KEY) {
        const key = process.env.OPENROUTER_API_KEY;
        if (key.startsWith('sk-or-v1-')) {
          keyFormat = '‚úÖ Formato correto';
        } else {
          keyFormat = '‚ùå Formato incorreto (deve come√ßar com sk-or-v1-)';
        }
      }
      
      let report = `üîß **TESTE DE CONFIGURA√á√ÉO**\n\n`;
      
      // Status das vari√°veis
      report += `üìã **Vari√°veis de Ambiente:**\n`;
      report += `‚Ä¢ DISCORD_TOKEN: ${config.discordToken}\n`;
      report += `‚Ä¢ OPENROUTER_API_KEY: ${config.openrouterKey}\n`;
      report += `‚Ä¢ DISCORD_CLIENT_ID: ${config.discordClientId}\n`;
      report += `‚Ä¢ DISCORD_APPLICATION_ID: ${config.discordAppId}\n`;
      report += `‚Ä¢ DISCORD_PUBLIC_KEY: ${config.discordPublicKey}\n\n`;
      
      // Formato dos tokens
      report += `üîç **Formato dos Tokens:**\n`;
      report += `‚Ä¢ Token Discord: ${tokenFormat}\n`;
      report += `‚Ä¢ Chave OpenRouter: ${keyFormat}\n\n`;
      
      // Diagn√≥stico
      report += `ü©∫ **Diagn√≥stico:**\n`;
      if (config.discordToken.includes('‚ùå')) {
        report += `‚ùå **PROBLEMA:** Token Discord n√£o configurado\n`;
        report += `üí° **SOLU√á√ÉO:** Configure DISCORD_TOKEN no arquivo .env\n`;
      } else if (tokenFormat.includes('‚ùå')) {
        report += `‚ùå **PROBLEMA:** Token Discord com formato incorreto\n`;
        report += `üí° **SOLU√á√ÉO:** Verifique se o token come√ßa com MT ou MTA\n`;
      } else {
        report += `‚úÖ **Token Discord:** Configurado corretamente\n`;
      }
      
      if (config.openrouterKey.includes('‚ùå')) {
        report += `‚ùå **PROBLEMA:** Chave OpenRouter n√£o configurada\n`;
        report += `üí° **SOLU√á√ÉO:** Configure OPENROUTER_API_KEY no arquivo .env\n`;
      } else if (keyFormat.includes('‚ùå')) {
        report += `‚ùå **PROBLEMA:** Chave OpenRouter com formato incorreto\n`;
        report += `üí° **SOLU√á√ÉO:** Verifique se a chave come√ßa com sk-or-v1-\n`;
      } else {
        report += `‚úÖ **Chave OpenRouter:** Configurada corretamente\n`;
      }
      
      // Instru√ß√µes
      report += `\nüìñ **Instru√ß√µes:**\n`;
      report += `1. Crie o arquivo \`.env\` na pasta nanabot/\n`;
      report += `2. Adicione suas chaves no formato correto\n`;
      report += `3. Reinicie o bot com \`npm start\`\n`;
      report += `4. Teste com \`n!ping\` no Discord\n\n`;
      
      report += `üîó **Links √öteis:**\n`;
      report += `‚Ä¢ Discord Developer: https://discord.com/developers/applications\n`;
      report += `‚Ä¢ OpenRouter: https://openrouter.ai/\n`;
      
      await message.reply(formatReply(report));
      console.log(`[TESTE-CONFIG] ‚úÖ Relat√≥rio de configura√ß√£o enviado`);
      
    } catch (error) {
      console.error(`[TESTE-CONFIG] üí• Erro:`, error.message);
      await message.reply(formatReply(`‚ùå **ERRO NO TESTE**\n\n${error.message}`));
    }
  }
};
