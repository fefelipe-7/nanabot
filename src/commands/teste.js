// src/commands/teste.js - Comando para testar a integra√ß√£o completa
import { SlashCommandBuilder } from 'discord.js';
import brainModule from '../core/brain.js';
const { getCompleteStats, getBrainStatus } = brainModule;

const data = new SlashCommandBuilder()
  .setName('teste')
  .setDescription('Testa todos os sistemas da Alice')
  .addStringOption(option =>
    option
      .setName('sistema')
      .setDescription('Sistema espec√≠fico para testar')
      .setRequired(false)
      .addChoices(
        { name: 'Todos os sistemas', value: 'all' },
        { name: 'C√©rebro', value: 'brain' },
        { name: 'Emo√ß√µes', value: 'emotion' },
        { name: 'Humor', value: 'mood' },
        { name: 'Apego', value: 'attachment' },
        { name: 'Aprendizado', value: 'learning' },
        { name: 'Imagina√ß√£o', value: 'imagination' },
        { name: 'Curiosidade', value: 'curiosity' },
        { name: 'Abstra√ß√£o', value: 'abstraction' },
        { name: 'Objetos de Apego', value: 'attachmentObjects' },
        { name: 'Crises', value: 'crises' },
        { name: 'Sonhos', value: 'dreams' },
        { name: 'Regula√ß√£o Emocional', value: 'emotionRegulation' },
        { name: 'Mem√≥ria Epis√≥dica', value: 'episodicMemory' },
        { name: 'Faz de Conta', value: 'fazDeConta' },
        { name: 'Motiva√ß√£o', value: 'motivacao' },
        { name: 'Aprendizado Social', value: 'socialLearning' },
        { name: 'Rastreador de Amor', value: 'loveTracker' },
        { name: 'Decaimento de Mem√≥ria', value: 'memoryDecay' },
        { name: 'Motor de Express√µes', value: 'expressionEngine' },
        { name: 'Sistema de Mal-entendidos', value: 'misunderstandings' },
        { name: 'Pr√©-processador de Linguagem', value: 'preprocessor' },
        { name: 'Contador de Hist√≥rias', value: 'storyTeller' },
        { name: 'Sistema de Vocabul√°rio', value: 'vocabulary' },
        { name: 'M√≥dulos Utilit√°rios', value: 'utils' }
      )
  );

async function execute(interaction) {
  await interaction.deferReply();

  try {
    const sistema = interaction.options.getString('sistema') || 'all';
    
    if (sistema === 'all') {
      // Testa todos os sistemas
      const stats = getCompleteStats();
      
      let response = 'üß† **Status Completo da Alice**\n\n';
      
      // C√©rebro
      response += `**üß† C√©rebro:**\n`;
      response += `- Processando: ${stats.brain.isProcessing ? 'Sim' : 'N√£o'}\n`;
      response += `- Fila: ${stats.brain.queueLength} itens\n`;
      response += `- Sa√∫de: ${(stats.brain.systemHealth * 100).toFixed(1)}%\n`;
      response += `- Intera√ß√µes: ${stats.brain.globalState.totalInteractions}\n\n`;
      
      // Emo√ß√µes
      response += `**üòä Emo√ß√µes:**\n`;
      response += `- Emo√ß√£o dominante: ${stats.emotion.dominantEmotion}\n`;
      response += `- Intensidade: ${(stats.emotion.intensity * 100).toFixed(1)}%\n`;
      response += `- Total de emo√ß√µes: ${stats.emotion.totalEmotions}\n\n`;
      
      // Humor
      response += `**üòå Humor:**\n`;
      response += `- N√≠vel: ${(stats.mood.moodLevel * 100).toFixed(1)}%\n`;
      response += `- Descri√ß√£o: ${stats.mood.moodDescription}\n`;
      response += `- Estabilidade: ${(stats.mood.moodStability * 100).toFixed(1)}%\n\n`;
      
      // Apego
      response += `**üíï Apego:**\n`;
      response += `- N√≠vel geral: ${(stats.attachment.attachmentLevel * 100).toFixed(1)}%\n`;
      response += `- Estilo: ${stats.attachment.attachmentStyle}\n`;
      response += `- Relacionamentos: ${stats.attachment.totalRelationships}\n\n`;
      
      // Aprendizado
      response += `**üìö Aprendizado:**\n`;
      response += `- Taxa: ${(stats.learning.learningRate * 100).toFixed(1)}%\n`;
      response += `- Experi√™ncias: ${stats.learning.totalExperiences}\n`;
      response += `- Habilidades: ${stats.learning.skillsCount}\n`;
      response += `- Conceitos: ${stats.learning.conceptsCount}\n\n`;
      
      // Imagina√ß√£o
      response += `**üé® Imagina√ß√£o:**\n`;
      response += `- N√≠vel: ${(stats.imagination.imaginationLevel * 100).toFixed(1)}%\n`;
      response += `- Criatividade: ${(stats.imagination.creativity * 100).toFixed(1)}%\n`;
      response += `- Imagens mentais: ${stats.imagination.totalMentalImages}\n\n`;
      
      // Curiosidade
      response += `**üîç Curiosidade:**\n`;
      response += `- N√≠vel: ${(stats.curiosity.curiosityLevel * 100).toFixed(1)}%\n`;
      response += `- Explora√ß√£o: ${(stats.curiosity.explorationDrive * 100).toFixed(1)}%\n`;
      response += `- Descobertas: ${(stats.curiosity.discoveryRate * 100).toFixed(1)}%\n\n`;
      
      // Novos M√≥dulos Fundamentais
      response += `**üß© Novos M√≥dulos Fundamentais:**\n`;
      response += `- Abstra√ß√£o: ${(stats.abstraction.abstractionLevel * 100).toFixed(1)}%\n`;
      response += `- Objetos de Apego: ${stats.attachmentObjects.totalAttachmentObjects}\n`;
      response += `- Crises: ${(stats.crises.crisisLevel * 100).toFixed(1)}%\n`;
      response += `- Sonhos: ${(stats.dreams.dreamActivity * 100).toFixed(1)}%\n`;
      response += `- Regula√ß√£o Emocional: ${(stats.emotionRegulation.regulationSkills * 100).toFixed(1)}%\n`;
      response += `- Mem√≥ria Epis√≥dica: ${stats.episodicMemory.totalMemories}\n`;
      response += `- Faz de Conta: ${(stats.fazDeConta.playfulness * 100).toFixed(1)}%\n`;
      response += `- Motiva√ß√£o: ${(stats.motivacao.motivationLevel * 100).toFixed(1)}%\n`;
      response += `- Aprendizado Social: ${(stats.socialLearning.socialLearningRate * 100).toFixed(1)}%\n`;
      response += `- Rastreador de Amor: ${(stats.loveTracker.loveLevel * 100).toFixed(1)}%\n`;
      response += `- Decaimento de Mem√≥ria: ${(stats.memoryDecay.decayRate * 100).toFixed(3)}%\n\n`;
      
      // M√≥dulos de Linguagem
      response += `**üó£Ô∏è M√≥dulos de Linguagem:**\n`;
      response += `- Motor de Express√µes: ${(stats.expressionEngine.expressionLevel * 100).toFixed(1)}%\n`;
      response += `- Sistema de Mal-entendidos: ${(stats.misunderstandings.misunderstandingRate * 100).toFixed(1)}%\n`;
      response += `- Pr√©-processador: ${(stats.preprocessor.preprocessingLevel * 100).toFixed(1)}%\n`;
      response += `- Contador de Hist√≥rias: ${(stats.storyTeller.storytellingLevel * 100).toFixed(1)}%\n`;
      response += `- Sistema de Vocabul√°rio: ${(stats.vocabulary.vocabularyLevel * 100).toFixed(1)}%\n\n`;
      
      // M√≥dulos Utilit√°rios
      response += `**üõ†Ô∏è M√≥dulos Utilit√°rios:**\n`;
      response += `- Banco de Dados: ${stats.database?.isConnected ? '‚úÖ Conectado' : '‚ùå Desconectado'}\n`;
      response += `- Exportador: ${stats.diaryExporter?.totalExports || 0} exports\n`;
      response += `- Filtros: ${(stats.filterSystem?.filterLevel * 100).toFixed(1)}%\n`;
      response += `- Modo M√°gico: ${(stats.magicMode?.magicLevel * 100).toFixed(1)}%\n\n`;
      
      response += `*Todos os ${stats.totalModules} sistemas est√£o funcionando! üéâ*`;
      
      await interaction.editReply(response);
      
    } else {
      // Testa sistema espec√≠fico
      const stats = getCompleteStats();
      let response = '';
      
      switch (sistema) {
        case 'brain':
          response = `üß† **Status do C√©rebro:**\n`;
          response += `- Processando: ${stats.brain.isProcessing ? 'Sim' : 'N√£o'}\n`;
          response += `- Fila: ${stats.brain.queueLength} itens\n`;
          response += `- Sa√∫de: ${(stats.brain.systemHealth * 100).toFixed(1)}%\n`;
          response += `- Intera√ß√µes: ${stats.brain.globalState.totalInteractions}\n`;
          response += `- √öltima intera√ß√£o: ${stats.brain.globalState.lastInteraction || 'Nunca'}\n`;
          break;
          
        case 'emotion':
          response = `üòä **Sistema de Emo√ß√µes:**\n`;
          response += `- Emo√ß√£o dominante: ${stats.emotion.dominantEmotion}\n`;
          response += `- Intensidade: ${(stats.emotion.intensity * 100).toFixed(1)}%\n`;
          response += `- Total de emo√ß√µes: ${stats.emotion.totalEmotions}\n`;
          response += `- Hist√≥rico: ${stats.emotion.emotionHistory.length} entradas\n`;
          break;
          
        case 'mood':
          response = `üòå **Sistema de Humor:**\n`;
          response += `- N√≠vel: ${(stats.mood.moodLevel * 100).toFixed(1)}%\n`;
          response += `- Descri√ß√£o: ${stats.mood.moodDescription}\n`;
          response += `- Estabilidade: ${(stats.mood.moodStability * 100).toFixed(1)}%\n`;
          response += `- Fatores: ${stats.mood.moodFactors.length}\n`;
          break;
          
        case 'attachment':
          response = `üíï **Sistema de Apego:**\n`;
          response += `- N√≠vel geral: ${(stats.attachment.attachmentLevel * 100).toFixed(1)}%\n`;
          response += `- Estilo: ${stats.attachment.attachmentStyle}\n`;
          response += `- Relacionamentos: ${stats.attachment.totalRelationships}\n`;
          response += `- Confian√ßa: ${(stats.attachment.trustLevel * 100).toFixed(1)}%\n`;
          break;
          
        case 'learning':
          response = `üìö **Sistema de Aprendizado:**\n`;
          response += `- Taxa: ${(stats.learning.learningRate * 100).toFixed(1)}%\n`;
          response += `- Experi√™ncias: ${stats.learning.totalExperiences}\n`;
          response += `- Habilidades: ${stats.learning.skillsCount}\n`;
          response += `- Conceitos: ${stats.learning.conceptsCount}\n`;
          response += `- Padr√µes: ${stats.learning.patternsCount}\n`;
          break;
          
        case 'imagination':
          response = `üé® **Sistema de Imagina√ß√£o:**\n`;
          response += `- N√≠vel: ${(stats.imagination.imaginationLevel * 100).toFixed(1)}%\n`;
          response += `- Criatividade: ${(stats.imagination.creativity * 100).toFixed(1)}%\n`;
          response += `- Pensamento abstrato: ${(stats.imagination.abstractThinking * 100).toFixed(1)}%\n`;
          response += `- Imagens mentais: ${stats.imagination.totalMentalImages}\n`;
          break;
          
        case 'curiosity':
          response = `üîç **Sistema de Curiosidade:**\n`;
          response += `- N√≠vel: ${(stats.curiosity.curiosityLevel * 100).toFixed(1)}%\n`;
          response += `- Explora√ß√£o: ${(stats.curiosity.explorationDrive * 100).toFixed(1)}%\n`;
          response += `- Descobertas: ${(stats.curiosity.discoveryRate * 100).toFixed(1)}%\n`;
          response += `- Perguntas: ${stats.curiosity.totalQuestions}\n`;
          break;
          
        case 'abstraction':
          response = `üß© **Sistema de Abstra√ß√£o:**\n`;
          response += `- N√≠vel de abstra√ß√£o: ${(stats.abstraction.abstractionLevel * 100).toFixed(1)}%\n`;
          response += `- Forma√ß√£o de conceitos: ${(stats.abstraction.conceptFormation * 100).toFixed(1)}%\n`;
          response += `- Categoriza√ß√£o: ${(stats.abstraction.categorization * 100).toFixed(1)}%\n`;
          response += `- Conceitos: ${stats.abstraction.totalConcepts}\n`;
          break;
          
        case 'attachmentObjects':
          response = `üß∏ **Sistema de Objetos de Apego:**\n`;
          response += `- Objetos de apego: ${stats.attachmentObjects.totalAttachmentObjects}\n`;
          response += `- Objetos de conforto: ${stats.attachmentObjects.totalComfortObjects}\n`;
          response += `- Objetos de transi√ß√£o: ${stats.attachmentObjects.totalTransitionObjects}\n`;
          response += `- Objetos especiais: ${stats.attachmentObjects.totalSpecialObjects}\n`;
          break;
          
        case 'crises':
          response = `üö® **Sistema de Crises:**\n`;
          response += `- N√≠vel de crise: ${(stats.crises.crisisLevel * 100).toFixed(1)}%\n`;
          response += `- Habilidades de regula√ß√£o: ${(stats.crises.regulationSkills * 100).toFixed(1)}%\n`;
          response += `- Taxa de recupera√ß√£o: ${(stats.crises.recoveryRate * 100).toFixed(1)}%\n`;
          response += `- Total de crises: ${stats.crises.totalCrises}\n`;
          break;
          
        case 'dreams':
          response = `üí≠ **Sistema de Sonhos:**\n`;
          response += `- Atividade on√≠rica: ${(stats.dreams.dreamActivity * 100).toFixed(1)}%\n`;
          response += `- N√≠vel subconsciente: ${(stats.dreams.subconsciousLevel * 100).toFixed(1)}%\n`;
          response += `- Clareza dos sonhos: ${(stats.dreams.dreamClarity * 100).toFixed(1)}%\n`;
          response += `- Total de sonhos: ${stats.dreams.totalDreams}\n`;
          break;
          
        case 'emotionRegulation':
          response = `üßò **Sistema de Regula√ß√£o Emocional:**\n`;
          response += `- Habilidades de regula√ß√£o: ${(stats.emotionRegulation.regulationSkills * 100).toFixed(1)}%\n`;
          response += `- Estabilidade emocional: ${(stats.emotionRegulation.emotionalStability * 100).toFixed(1)}%\n`;
          response += `- Autocontrole: ${(stats.emotionRegulation.selfControl * 100).toFixed(1)}%\n`;
          response += `- Total de regula√ß√µes: ${stats.emotionRegulation.totalRegulations}\n`;
          break;
          
        case 'episodicMemory':
          response = `üß† **Sistema de Mem√≥ria Epis√≥dica:**\n`;
          response += `- Total de mem√≥rias: ${stats.episodicMemory.totalMemories}\n`;
          response += `- Categorias de mem√≥ria: ${stats.episodicMemory.memoryCategories}\n`;
          response += `- Linha do tempo: ${stats.episodicMemory.memoryTimeline}\n`;
          break;
          
        case 'fazDeConta':
          response = `üé≠ **Sistema de Faz de Conta:**\n`;
          response += `- N√≠vel de brincadeira: ${(stats.fazDeConta.playfulness * 100).toFixed(1)}%\n`;
          response += `- Criatividade: ${(stats.fazDeConta.creativity * 100).toFixed(1)}%\n`;
          response += `- Imagina√ß√£o: ${(stats.fazDeConta.imagination * 100).toFixed(1)}%\n`;
          response += `- Cen√°rios de roleplay: ${stats.fazDeConta.totalScenarios}\n`;
          break;
          
        case 'motivacao':
          response = `üéØ **Sistema de Motiva√ß√£o:**\n`;
          response += `- N√≠vel de motiva√ß√£o: ${(stats.motivacao.motivationLevel * 100).toFixed(1)}%\n`;
          response += `- Orienta√ß√£o para objetivos: ${(stats.motivacao.goalOrientation * 100).toFixed(1)}%\n`;
          response += `- Impulso para conquistas: ${(stats.motivacao.achievementDrive * 100).toFixed(1)}%\n`;
          response += `- Motiva√ß√£o intr√≠nseca: ${(stats.motivacao.intrinsicMotivation * 100).toFixed(1)}%\n`;
          break;
          
        case 'socialLearning':
          response = `üë• **Sistema de Aprendizado Social:**\n`;
          response += `- Taxa de aprendizado social: ${(stats.socialLearning.socialLearningRate * 100).toFixed(1)}%\n`;
          response += `- Habilidades de observa√ß√£o: ${(stats.socialLearning.observationSkills * 100).toFixed(1)}%\n`;
          response += `- Capacidade de imita√ß√£o: ${(stats.socialLearning.imitationAbility * 100).toFixed(1)}%\n`;
          response += `- Consci√™ncia social: ${(stats.socialLearning.socialAwareness * 100).toFixed(1)}%\n`;
          break;
          
        case 'loveTracker':
          response = `üíï **Rastreador de Amor:**\n`;
          response += `- N√≠vel de amor: ${(stats.loveTracker.loveLevel * 100).toFixed(1)}%\n`;
          response += `- Total de express√µes: ${stats.loveTracker.totalExpressions}\n`;
          response += `- Intensidade m√©dia: ${(stats.loveTracker.averageIntensity * 100).toFixed(1)}%\n`;
          response += `- Destinat√°rios: ${stats.loveTracker.recipients.length}\n`;
          break;
          
        case 'memoryDecay':
          response = `‚è∞ **Sistema de Decaimento de Mem√≥ria:**\n`;
          response += `- Taxa de decaimento: ${(stats.memoryDecay.decayRate * 100).toFixed(3)}%\n`;
          response += `- Limiar de reten√ß√£o: ${(stats.memoryDecay.retentionThreshold * 100).toFixed(1)}%\n`;
          response += `- Peso da import√¢ncia: ${(stats.memoryDecay.importanceWeight * 100).toFixed(1)}%\n`;
          response += `- Eventos de decaimento: ${stats.memoryDecay.totalDecayEvents}\n`;
          break;
          
        case 'expressionEngine':
          response = `üé≠ **Motor de Express√µes:**\n`;
          response += `- N√≠vel de express√£o: ${(stats.expressionEngine.expressionLevel * 100).toFixed(1)}%\n`;
          response += `- Express√£o emocional: ${(stats.expressionEngine.emotionalExpression * 100).toFixed(1)}%\n`;
          response += `- Express√£o lingu√≠stica: ${(stats.expressionEngine.linguisticExpression * 100).toFixed(1)}%\n`;
          response += `- Express√£o comportamental: ${(stats.expressionEngine.behavioralExpression * 100).toFixed(1)}%\n`;
          break;
          
        case 'misunderstandings':
          response = `ü§î **Sistema de Mal-entendidos:**\n`;
          response += `- Taxa de mal-entendidos: ${(stats.misunderstandings.misunderstandingRate * 100).toFixed(1)}%\n`;
          response += `- Habilidades de esclarecimento: ${(stats.misunderstandings.clarificationSkills * 100).toFixed(1)}%\n`;
          response += `- Toler√¢ncia √† confus√£o: ${(stats.misunderstandings.confusionTolerance * 100).toFixed(1)}%\n`;
          response += `- Aprendizado com erros: ${(stats.misunderstandings.learningFromMistakes * 100).toFixed(1)}%\n`;
          break;
          
        case 'preprocessor':
          response = `üîß **Pr√©-processador de Linguagem:**\n`;
          response += `- N√≠vel de pr√©-processamento: ${(stats.preprocessor.preprocessingLevel * 100).toFixed(1)}%\n`;
          response += `- Habilidades de normaliza√ß√£o: ${(stats.preprocessor.normalizationSkills * 100).toFixed(1)}%\n`;
          response += `- Habilidades de contextualiza√ß√£o: ${(stats.preprocessor.contextualizationSkills * 100).toFixed(1)}%\n`;
          response += `- An√°lise lingu√≠stica: ${(stats.preprocessor.linguisticAnalysis * 100).toFixed(1)}%\n`;
          break;
          
        case 'storyTeller':
          response = `üìö **Contador de Hist√≥rias:**\n`;
          response += `- N√≠vel de conta√ß√£o: ${(stats.storyTeller.storytellingLevel * 100).toFixed(1)}%\n`;
          response += `- N√≠vel de criatividade: ${(stats.storyTeller.creativityLevel * 100).toFixed(1)}%\n`;
          response += `- Habilidades narrativas: ${(stats.storyTeller.narrativeSkills * 100).toFixed(1)}%\n`;
          response += `- N√≠vel de imagina√ß√£o: ${(stats.storyTeller.imaginationLevel * 100).toFixed(1)}%\n`;
          break;
          
        case 'vocabulary':
          response = `üìñ **Sistema de Vocabul√°rio:**\n`;
          response += `- N√≠vel de vocabul√°rio: ${(stats.vocabulary.vocabularyLevel * 100).toFixed(1)}%\n`;
          response += `- Taxa de aprendizado: ${(stats.vocabulary.wordLearningRate * 100).toFixed(1)}%\n`;
          response += `- Compreens√£o de significados: ${(stats.vocabulary.meaningComprehension * 100).toFixed(1)}%\n`;
          response += `- Desenvolvimento lingu√≠stico: ${(stats.vocabulary.linguisticDevelopment * 100).toFixed(1)}%\n`;
          break;
          
        case 'utils':
          response = `üõ†Ô∏è **M√≥dulos Utilit√°rios:**\n`;
          response += `- Banco de Dados: ${stats.database?.isConnected ? '‚úÖ Conectado' : '‚ùå Desconectado'}\n`;
          response += `- Exportador: ${stats.diaryExporter?.totalExports || 0} exports\n`;
          response += `- Filtros: ${(stats.filterSystem?.filterLevel * 100).toFixed(1)}%\n`;
          response += `- Modo M√°gico: ${(stats.magicMode?.magicLevel * 100).toFixed(1)}%\n`;
          response += `- Total de M√≥dulos: ${stats.totalModules}\n`;
          break;
          
        default:
          response = '‚ùå Sistema n√£o encontrado!';
      }
      
      await interaction.editReply(response);
    }
    
  } catch (error) {
    console.error('Erro no comando de teste:', error);
    await interaction.editReply('‚ùå Erro ao testar os sistemas: ' + error.message);
  }
}

export default { data, execute };
